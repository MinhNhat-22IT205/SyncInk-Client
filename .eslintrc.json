{
  "env": {
    "node": true
  },
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["import",  "@typescript-eslint", "prettier"],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
        "moduleDirectory": ["node_modules", "src/"]
      }
    }
  },
  "rules": {
    "no-unused-vars": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@next/next/no-img-element": "off",
   
    "no-eq-null": "warn",
    "import/order": [
      "warn",
      {
        "groups": [
          ["builtin", "external"],
          "internal",
          "parent",
          ["sibling", "index"],
          "object"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "complexity": "warn",
    "no-console": ["error"],
    //fix CR error
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "import/no-restricted-paths": [
      "error",
      {
        "zones": [
          // disables cross-feature imports:
          // eg. app/features/discussions should not import from app/features/comments, etc.
          {
              "target": "./app/_features/authentication",
              "from": "./app/_features", //prohibit path
              "except": ["./authentication"]
          },
          {
              "target": "./app/_features/document",
              "from": "./app/_features",
              "except": ["./document"]
          },
          // More restrictions...

          //* enforce unidirectional codebase:
          // e.g. app/routes can import from app/features but not the other way around
          {
            "target": "./app/_features",
            "from": "./app/(routes)"
          },
          // e.g app/_features and app/(routes) can import from these shared modules but not the other way around
          {
            "target": [
                "./app/_shared"
            ],
            "from": ["./app/_features", "./app/(routes)"]
          }
        ]
      }
    ]
  }
}
